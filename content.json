[{"title":"Hexo + GitHub 搭建个人博客","date":"2017-09-13T09:54:14.000Z","path":"2017/09/13/Hexo-GitHub-搭建个人博客/","text":"今天刚好把这个博客搭建起来，就顺便写写搭建过程。 依赖条件注册 Github 账号安装 Git安装 Nodejs安装 Hexo 注册 Github 账号GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 git 作为唯一的版本库格式进行托管，故名 GitHub。 登陆 GitHub官网，点击 Sign up 进行注册。过程简单，默认选项，点击绿色按钮即可。 踩坑提醒注册好的 GitHub 账号一定要进行邮箱地址的校验操作，否则会影响 GitHub 博客的访问 注册成功后登陆到管理页面，如下图： 点击 New repositoty 创建新仓库。如果找不到该页面，点击右上角的 “+” 号也可以新建仓库。 然后输入仓库名称。仓库名称格式为 [username].github.io。如下图所示： 点击 Create repository 。此处完成对 GitHub 的操作。 安装 GitGit 是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 通过 Git，我们可以将本地代码上传到远端的 GitHub 服务器进行代码托管。 安装过程简单，略过。 安装完成后，我们需要通过 Git 连接上 GitHub。步骤如下： 生成 SSH Key打开 Git Bash，键入 ssh-keygen -t rsa -C “邮箱地址”，不管任何提示，直接回车即可。执行成功后，在 C:/Users/用户名/.ssh/ 目录下会生成2个文件：id_rsa 和 id_rsa.pub。 提交公钥登陆 GitHub 来到管理界面，点击右上角的图标按钮，如下图: 点击 Setttings。来到设置界面，选择 SSH and GPG keys 菜单。如下图： 我们将 id_rsa.pub 文件中的所有内容复制到文本框中，点击 Add SSH key 完成操作。 测试连接打开 Git Bash，键入 ssh -T git@github.com ，如果出现 “You’ve successfully authenticated” 字样，说明之前的配置都生效了。 配置连接账户信息为了避免每次连接 GitHub 都需要输入用户名和密码，我们需要给 Git 配置连接 GitHub 的账户信息。 打开 Git Bash，键入 git config --global user.name &quot;用户名&quot; #设置用户名 git config --global user.email &quot;邮箱地址&quot; #设置邮箱地址(建议用注册github的邮箱) 安装 Nodejs简单的说 Nodejs 就是运行 javascript 的容器(环境) 我们安装 Nodejs 主要是为了使用它的 npm 命令。安装过程简单，略过。 安装 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 登陆 Hexo中文官网，我们可以清晰地看到 Hexo的安装过程，如下图： 选择任意目录，执行截图中的命令。如下： hexo install hexo-cli -g hexo init blog cd blog npm install hexo server 踩坑提醒 在执行最后一条命令后，不知道什么情况，没法访问博客首页。因此修改端口进行启动 即 hexo server -p 8080,如下图： 本地可以正常访问博客，但是我们的最终目标是将本地代码提交到 GitHub 上进行页面的访问。 修改 hexo 配置打开 blog 目录中的 _config.yml 文件修改 deploy 参数，以便能将代码提交到 GitHub上： deploy: type: git repo: git@github.com:darkmoonlight/darkmoonlight.github.io.git branch: master 踩坑提醒 冒号后边必须有一个空格 repo 的值填写 ssh 类型的地址，如果填写 https 类型地址，每次连接 GitHub 都要输入用户名和密码。 生成静态资源文件键入 hexo generate 该命令执行会查找 hexo 的模板文件生成 html 文件。命令执行成功后，会在 blog 目录下生成 public 的文件夹，里边存放着静态资源文件。 提交代码键入 hexo deploy 踩坑提醒 在执行 hexo deploy 后,出现 error deployer not found:github 的错误。需要安装 hexo-deployer-git 键入 npm install hexo-deployer-git –save 再重新 hexo deploy 即可上传代码。如下图： 访问线上博客上传代码后，我们查看 GitHub 新建的仓库已经存放了文件，如下图： 在浏览器中输入 https://darkmoonlight.github.io/ 即可访问我们搭建好的博客，如下图： 发布博客搭建好博客，其目的还是要写文章，将文章发布到博客中。那我们该如何发布博客呢？ 打开 Git Bash 或 CMD，切换到 blog 目录下，键入 hexo new “first_blog”。 执行成功后，会在 blog/source/_posts中创建一个名为 first_blog.md 的文件。 打开 first_blog.md 文件修改其内容如下图： 保存，我们再重新启动 hexo 服务。键入 hexo clean &amp;&amp; hexo server -p 8080,结果如下图： 刚刚创建的 first_blog.md 文件的内容已经被发表了。 关于 hexo 的小技巧 我们在敲 hexo 命令时，其实可以简化命令的书写：hexo g 等价于 hexo generatehexo d 等价于 hexo deployhexo s 等价于 hexo serverhexo n 等价于 hexo new 发布博文时，由于由于使用的 Markdown 语法，为了能有效而直观的浏览我们编写的内容，我们可以：使用 CSDN-markdown 在线编辑器 ，而且还免费支持图片上传。文章编写完成后可以将内容导出到本地，再复制粘贴到 _posts 文件夹中 小结搭建博客的步骤虽然多，但是操作不算复杂，而且里边的坑，笔者基本已经踩过并指明出来，跟着教程一步步执行一定可以成功搭建属于自己的博客！","tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://www.extlight.com/tags/博客搭建/"}]},{"title":"简单介绍","date":"2017-09-13T08:21:14.000Z","path":"2017/09/13/简单介绍/","text":"之前在博客园上写博客，但是由于排版困难且不友好，因此换成Indigo主题。以后就在这里写博客了。","tags":[]}]