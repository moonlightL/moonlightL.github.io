<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>月光中的污点</title>
  <icon>https://www.gravatar.com/avatar/349377edd1f2525f251e02b16f1d86cc</icon>
  <subtitle>云在青天水在瓶</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.extlight.com/"/>
  <updated>2017-09-28T01:41:38.403Z</updated>
  <id>http://www.extlight.com/</id>
  
  <author>
    <name>moonlightL</name>
    <email>jx8996@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch 基础入门</title>
    <link href="http://www.extlight.com/2017/09/27/Elasticsearch-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
    <id>http://www.extlight.com/2017/09/27/Elasticsearch-基础入门/</id>
    <published>2017-09-27T02:58:59.000Z</published>
    <updated>2017-09-28T01:41:38.403Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-15.jpg" alt=""></p><h2 id="一、什么是-ElasticSearch"><a href="#一、什么是-ElasticSearch" class="headerlink" title="一、什么是 ElasticSearch"></a>一、什么是 ElasticSearch</h2><p>ElasticSearch是一个基于 Lucene 的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于 RESTful web 接口。Elasticsearch 是用 Java 开发的，并作为 Apache 许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。</p><a id="more"></a><h3 id="1-1-基础概念"><a href="#1-1-基础概念" class="headerlink" title="1.1 基础概念"></a>1.1 基础概念</h3><p>索引：含有相同属性的文档集合</p><p>类型：索引可以定义一个或多个类型，文档必须属于一个类型</p><p>文档：可以被索引的基础数据单位</p><p>分片：每个索引都有多个分片，每个分片都是 Lucene 索引</p><p>备份：拷贝一份分片就完成分片的备份</p><p><strong>形象比喻：</strong></p><p>百货大楼里有各式各样的商品，例如书籍、笔、水果等。书籍可以根据内容划分成不同种类，如科技类、教育类、悬疑推理等。悬疑推理类的小说中比较有名气的有《福尔摩斯探案集》、《白夜行》等。</p><p>百货大楼 –&gt; ElasticSearch 数据库</p><p>书籍     –&gt; 索引</p><p>悬疑推理 –&gt; 类型</p><p>白夜行   –&gt; 文档</p><h3 id="1-2-应用场景"><a href="#1-2-应用场景" class="headerlink" title="1.2 应用场景"></a>1.2 应用场景</h3><ul><li>海量数据分析引擎</li><li>站内搜索引擎</li><li>数据仓库</li></ul><h2 id="二、安装和配置"><a href="#二、安装和配置" class="headerlink" title="二、安装和配置"></a>二、安装和配置</h2><blockquote><p>本次测试使用一台 ip 为 192.168.2.41 的虚拟机（Centos7），建议使用 7.x 版本，笔者之前使用 6.x 启动服务时报出各种错误</p></blockquote><h3 id="2-1-依赖环境"><a href="#2-1-依赖环境" class="headerlink" title="2.1 依赖环境"></a>2.1 依赖环境</h3><p>JDK 和 NodeJS</p><h3 id="2-2-下载"><a href="#2-2-下载" class="headerlink" title="2.2 下载"></a>2.2 下载</h3><p>登陆 <a href="http://elastic.co/" target="_blank" rel="external">elasticSearch</a> 官网下载文件。</p><h3 id="2-3-安装"><a href="#2-3-安装" class="headerlink" title="2.3 安装"></a>2.3 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar -zxvf elasticsearch-5.6.1.tar.gz -C /usr</div><div class="line"></div><div class="line">cd elasticsearch-5.6.1</div></pre></td></tr></table></figure><p>elasticsearch 文件目录如下图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-1.jpg" alt=""></p><h3 id="2-4-启动"><a href="#2-4-启动" class="headerlink" title="2.4 启动"></a>2.4 启动</h3><p><strong><em>踩坑提醒 1：</em></strong></p><p>因为 Elasticsearch 可以执行脚本文件，为了安全性，默认不允许通过 root 用户启动服务。我们需要新创建用户名和用户组启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#增加 es 组</div><div class="line">groupadd es    </div><div class="line"></div><div class="line">#增加 es 用户并附加到 es 组</div><div class="line">useradd es -g es -p es       </div><div class="line"></div><div class="line">#给目录权限</div><div class="line">chown -R es:es elasticsearch-5.6.1    </div><div class="line"></div><div class="line">#使用es用户</div><div class="line">su es</div></pre></td></tr></table></figure><p><strong><em>踩坑提醒 2：</em></strong></p><p>默认情况下，Elasticsearch 只允许本机访问，如果需要远程访问，需要修改其配置文件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vim config/elasticsearch.yml </div><div class="line"></div><div class="line"># 去掉 network.host 前边的注释，将它的值改成0.0.0.0</div><div class="line">network.host: 0.0.0.0</div></pre></td></tr></table></figure><p><strong><em>踩坑提醒 3：</em></strong></p><p>在启动过程中，Centos 环境下可能还会报错，具体解决方案请参照文章末尾提供的资料</p><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/elasticsearch</div></pre></td></tr></table></figure><p>通过浏览器访问 <a href="http://192.168.2.41:9200" target="_blank" rel="external">http://192.168.2.41:9200</a> ，当出现如下内容说明启动成功:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;name&quot; : &quot;OwUwJe-&quot;,</div><div class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</div><div class="line">  &quot;cluster_uuid&quot; : &quot;vanzxnpaRumdRKiYic3f5A&quot;,</div><div class="line">  &quot;version&quot; : &#123;</div><div class="line">    &quot;number&quot; : &quot;5.6.1&quot;,</div><div class="line">    &quot;build_hash&quot; : &quot;667b497&quot;,</div><div class="line">    &quot;build_date&quot; : &quot;2017-09-14T19:22:05.189Z&quot;,</div><div class="line">    &quot;build_snapshot&quot; : false,</div><div class="line">    &quot;lucene_version&quot; : &quot;6.6.1&quot;</div><div class="line">  &#125;,</div><div class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-5-安装插件"><a href="#2-5-安装插件" class="headerlink" title="2.5 安装插件"></a>2.5 安装插件</h3><p>访问 <a href="http://192.168.2.41:9200" target="_blank" rel="external">http://192.168.2.41:9200</a> 查看内容显示效果不友好，因此，我们需要安装一个名为 elasticsearch-head 的插件，让内容显示效果比较舒适。</p><p>登陆 <a href="https://github.com" target="_blank" rel="external">GitHub</a> 网站，搜索 mobz/elasticsearch-head ，将其下载到本地。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/mobz/elasticsearch-head/archive/master.zip</div><div class="line"></div><div class="line">unzip master.zip</div><div class="line"></div><div class="line">cd elasticsearch-head-master</div><div class="line"></div><div class="line">npm install</div><div class="line"></div><div class="line">npm run start</div></pre></td></tr></table></figure><p>通过上述命令的操作，我们已经安装好 elasticsearch-head 插件。通过浏览器访问 <a href="http://192.168.2.41:9100，如下图" target="_blank" rel="external">http://192.168.2.41:9100，如下图</a>:</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-4.jpg" alt=""></p><p>图中我们发现 elasticsearch-head 插件和 Elasticsearch 服务并没有建立连接，所以我们还需要修改 Elasticsearch 的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cd elasticsearch-5.6.1</div><div class="line"></div><div class="line">vim config/elasticsearch.yml</div><div class="line"></div><div class="line"># 在文件末尾添加 2 段配置</div><div class="line"></div><div class="line">http.cors.enabled: true</div><div class="line">http.cors.allow-origin: &quot;*&quot;</div></pre></td></tr></table></figure><p>保存文件后，分别起来 2 个程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">cd elasticsearch-5.6.1</div><div class="line"></div><div class="line"># 后台启动 elasticSearch 服务</div><div class="line">bin/elasticsearch -d</div><div class="line"></div><div class="line">cd elasticsearch-head-master</div><div class="line"></div><div class="line">npm run start</div></pre></td></tr></table></figure><p>通过浏览器访问 <a href="http://192.168.2.41:9100，如下图" target="_blank" rel="external">http://192.168.2.41:9100，如下图</a>:</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-5.jpg" alt=""></p><p>通过插件创建索引</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-13.jpg" alt=""></p><p>查看索引基本情况</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-14.jpg" alt=""></p><p><strong>该插件能直接对 Elasticsearch 的数据进行增删改查，因此存在安全性的问题。建议生产环境下不要使用该插件！</strong></p><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>Elasticsearch 支持 RESTFUL 风格 API，其 API 基本格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://&lt;ip&gt;:&lt;port&gt;/&lt;索引&gt;/&lt;类型&gt;/&lt;文档id&gt;</div></pre></td></tr></table></figure><h3 id="3-1-创建-删除索引"><a href="#3-1-创建-删除索引" class="headerlink" title="3.1 创建/删除索引"></a>3.1 创建/删除索引</h3><p>为了方便测试，我们使用 POSTMAN 工具进行接口的请求。</p><p>创建一个非结构化的索引，需要使用 <strong>PUT</strong> 请求。例如创建一个名为 book 的索引。</p><p>执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[PUT] http://192.168.2.41:9200/book</div></pre></td></tr></table></figure></p><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;acknowledged&quot;: true,</div><div class="line">    &quot;shards_acknowledged&quot;: true,</div><div class="line">    &quot;index&quot;: &quot;book&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>创建一个结构化的索引，如下图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-07.jpg" alt=""></p><p>删除一个索引，需要使用 <strong>DELETE</strong> 请求。</p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[DELETE] http://192.168.2.41:9200/book</div></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;acknowledged&quot;: true</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-2-插入数据"><a href="#3-2-插入数据" class="headerlink" title="3.2 插入数据"></a>3.2 插入数据</h3><p>插入指定 ID 的数据，需要使用 <strong>PUT</strong> 请求。如下图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-9.jpg" alt=""></p><p>插入不指定 ID 的数据，需要使用 <strong>POST</strong> 请求。如下图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/elasticSearch-10.jpg" alt=""></p><h3 id="3-3-修改数据"><a href="#3-3-修改数据" class="headerlink" title="3.3 修改数据"></a>3.3 修改数据</h3><p>修改数据，需要使用 <strong>POST</strong> 请求，且 URL 需要添加 _update </p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[POST] http://192.168.2.41:9200/fruit/apple/1/_update</div></pre></td></tr></table></figure><p>请求参数（修改颜色）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;doc&quot;: &#123;</div><div class="line">        &quot;color&quot;: &quot;black&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;_index&quot;: &quot;fruit&quot;,</div><div class="line">    &quot;_type&quot;: &quot;apple&quot;,</div><div class="line">    &quot;_id&quot;: &quot;1&quot;,</div><div class="line">    &quot;_version&quot;: 7,</div><div class="line">    &quot;result&quot;: &quot;updated&quot;,</div><div class="line">    &quot;_shards&quot;: &#123;</div><div class="line">        &quot;total&quot;: 2,</div><div class="line">        &quot;successful&quot;: 1,</div><div class="line">        &quot;failed&quot;: 0</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-4-删除数据"><a href="#3-4-删除数据" class="headerlink" title="3.4 删除数据"></a>3.4 删除数据</h3><p>修改数据，需要使用 <strong>DELETE</strong> 请求。</p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[DELETE] http://192.168.2.41:9200/fruit/apple/1</div></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;found&quot;: true,</div><div class="line">    &quot;_index&quot;: &quot;fruit&quot;,</div><div class="line">    &quot;_type&quot;: &quot;apple&quot;,</div><div class="line">    &quot;_id&quot;: &quot;1&quot;,</div><div class="line">    &quot;_version&quot;: 8,</div><div class="line">    &quot;result&quot;: &quot;deleted&quot;,</div><div class="line">    &quot;_shards&quot;: &#123;</div><div class="line">        &quot;total&quot;: 2,</div><div class="line">        &quot;successful&quot;: 1,</div><div class="line">        &quot;failed&quot;: 0</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-5-查找数据"><a href="#3-5-查找数据" class="headerlink" title="3.5 查找数据"></a>3.5 查找数据</h3><p>查询指定ID的数据，需要使用 <strong>GET</strong> 请求。</p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[GET] http://192.168.2.41:9200/fruit/apple/AV69_4DDdZbC-YBdV-U3</div></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;_index&quot;: &quot;fruit&quot;,</div><div class="line">    &quot;_type&quot;: &quot;apple&quot;,</div><div class="line">    &quot;_id&quot;: &quot;AV69_4DDdZbC-YBdV-U3&quot;,</div><div class="line">    &quot;_version&quot;: 1,</div><div class="line">    &quot;found&quot;: true,</div><div class="line">    &quot;_source&quot;: &#123;</div><div class="line">        &quot;color&quot;: &quot;green&quot;,</div><div class="line">        &quot;weight&quot;: 1,</div><div class="line">        &quot;createTime&quot;: &quot;2017-09-26 19:05:26&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>条件查询，需要使用 <strong>POST</strong> 请求。</p><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[POST] http://192.168.2.41:9200/fruit/apple/_search</div></pre></td></tr></table></figure><p>请求参数（查找 color = “green”）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;query&quot;: &#123;</div><div class="line">        &quot;match&quot;:&#123;</div><div class="line">            &quot;color&quot;: &quot;green&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;took&quot;: 8,</div><div class="line">    &quot;timed_out&quot;: false,</div><div class="line">    &quot;_shards&quot;: &#123;</div><div class="line">        &quot;total&quot;: 5,</div><div class="line">        &quot;successful&quot;: 5,</div><div class="line">        &quot;skipped&quot;: 0,</div><div class="line">        &quot;failed&quot;: 0</div><div class="line">    &#125;,</div><div class="line">    &quot;hits&quot;: &#123;</div><div class="line">        &quot;total&quot;: 1,</div><div class="line">        &quot;max_score&quot;: 0.2876821,</div><div class="line">        &quot;hits&quot;: [</div><div class="line">            &#123;</div><div class="line">                &quot;_index&quot;: &quot;fruit&quot;,</div><div class="line">                &quot;_type&quot;: &quot;apple&quot;,</div><div class="line">                &quot;_id&quot;: &quot;AV69_4DDdZbC-YBdV-U3&quot;,</div><div class="line">                &quot;_score&quot;: 0.2876821,</div><div class="line">                &quot;_source&quot;: &#123;</div><div class="line">                    &quot;color&quot;: &quot;green&quot;,</div><div class="line">                    &quot;weight&quot;: 1,</div><div class="line">                    &quot;createTime&quot;: &quot;2017-09-26 19:05:26&quot;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://blog.csdn.net/qq942477618/article/details/53414983" target="_blank" rel="external">http://blog.csdn.net/qq942477618/article/details/53414983</a>    解决问题方案</li><li><a href="http://blog.csdn.net/laotoumo/article/details/53890279" target="_blank" rel="external">http://blog.csdn.net/laotoumo/article/details/53890279</a>          解决问题方案</li><li><a href="http://blog.csdn.net/jiankunking/article/details/65448030" target="_blank" rel="external">http://blog.csdn.net/jiankunking/article/details/65448030</a>       解决问题方案</li><li><a href="http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html</a></li><li><a href="http://www.cnblogs.com/ghj1976/p/5293250.html" target="_blank" rel="external">http://www.cnblogs.com/ghj1976/p/5293250.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ow97db1io.bkt.clouddn.com/elasticSearch-15.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、什么是-ElasticSearch&quot;&gt;&lt;a href=&quot;#一、什么是-ElasticSearch&quot; class=&quot;headerlink&quot; title=&quot;一、什么是 ElasticSearch&quot;&gt;&lt;/a&gt;一、什么是 ElasticSearch&lt;/h2&gt;&lt;p&gt;ElasticSearch是一个基于 Lucene 的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于 RESTful web 接口。Elasticsearch 是用 Java 开发的，并作为 Apache 许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://www.extlight.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Elasticsearch" scheme="http://www.extlight.com/tags/Elasticsearch/"/>
    
      <category term="搜索" scheme="http://www.extlight.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>记一次跨域问题的解决方案</title>
    <link href="http://www.extlight.com/2017/09/26/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.extlight.com/2017/09/26/记一次跨域问题的解决方案/</id>
    <published>2017-09-26T02:45:28.000Z</published>
    <updated>2017-09-28T01:59:35.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>在公司空暇时间，笔者使用 AngularJS + SSM 方案编写一套权限控制系统。由于采用的是前后端分离的思想，前端页面服务启动的端口和后端服务启动端口不一致导致请求跨域问题的出现。在此，写下解决问题的流程。</p><blockquote><p>建议读者先浏览文章末尾提供的参考资料初步了解跨域基本知识，再结合本文案例思考和理解</p></blockquote><h2 id="二、前端"><a href="#二、前端" class="headerlink" title="二、前端"></a>二、前端</h2><h3 id="2-1-设置请求参数"><a href="#2-1-设置请求参数" class="headerlink" title="2.1 设置请求参数"></a>2.1 设置请求参数</h3><p>在 ajax 请求参数中添加 2 个参数设置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xhrFields: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;</div><div class="line"></div><div class="line">crossDomain: <span class="literal">true</span></div></pre></td></tr></table></figure><a id="more"></a><h3 id="2-2-具体案例"><a href="#2-2-具体案例" class="headerlink" title="2.2 具体案例"></a>2.2 具体案例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">$.ajaxSetup(&#123;</div><div class="line">    dataType: <span class="string">"json"</span>,</div><div class="line">    cache: <span class="literal">false</span>,</div><div class="line">    xhrFields: &#123; <span class="attr">withCredentials</span>: <span class="literal">true</span> &#125;,<span class="comment">//设置后，请求会携带cookie</span></div><div class="line">    crossDomain: <span class="literal">true</span>,</div><div class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (xhr.responseJSON) &#123;</div><div class="line">            <span class="keyword">if</span> (xhr.responseJSON.code == <span class="number">401</span>) &#123;</div><div class="line">                layer.msg(xhr.responseJSON.msg);</div><div class="line">                setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">                    <span class="built_in">window</span>.location.href = <span class="string">"login.html"</span>;</div><div class="line">                &#125;, <span class="number">1500</span>);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            layer.msg(xhr.responseText);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h2 id="三、后端"><a href="#三、后端" class="headerlink" title="三、后端"></a>三、后端</h2><h3 id="3-1-设置跨域请求过滤器"><a href="#3-1-设置跨域请求过滤器" class="headerlink" title="3.1 设置跨域请求过滤器"></a>3.1 设置跨域请求过滤器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleCORSFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse resp, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</div><div class="line">        HttpServletResponse response = (HttpServletResponse) resp;</div><div class="line">        HttpServletRequest request=(HttpServletRequest)req;</div><div class="line">        <span class="comment">// 处理简单请求</span></div><div class="line">        <span class="comment">// 跨域请求默认不携带cookie,如果要携带cookie，需要设置下边2个响应头</span></div><div class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, request.getHeader(<span class="string">"Origin"</span>));<span class="comment">// 必选，所有有效的跨域响应都必须包含这个请求头, 没有的话会导致跨域请求失败</span></div><div class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Credentials"</span>, <span class="string">"true"</span>);<span class="comment">//可选，此处设置为true,对应前端 xhr.withCredentials = true;</span></div><div class="line">        <span class="comment">//处理非简单请求</span></div><div class="line">        <span class="comment">//  非简单请求：浏览器会发送两个请求, 第一个请求(成为预检请求)会像服务器确定是否接受这个跨域请求, 第二个才是真正的发出请求. 浏览器自动的处理这两个请求, 同时预检请求也是可以被缓存的, 而不用每次请求都需要发送预检请求.</span></div><div class="line">        <span class="comment">//  预检请求是在实际的请求发出前先向服务器确认是否能够处理这个请求. 服务器应该检查上边两个请求头的值, 来判断这个请求是否有效.</span></div><div class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST,GET,OPTIONS,DELETE"</span>);<span class="comment">// 必选</span></div><div class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>,</div><div class="line">                <span class="string">"Origin,No-Cache,X-Requested-With,If-Modified-Since,"</span> +</div><div class="line">                        <span class="string">"Pragma,Last-Modified,Cache-Control,Expires,Content-Type,X-E4M-With,userId,token"</span>);</div><div class="line"></div><div class="line">        response.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"0"</span>);<span class="comment">// 可选,在每个请求前面都发送一个预检请求是很浪费资源的, 这个值允许你设置预检请求的缓存时间, 单位是秒.</span></div><div class="line">        response.setHeader(<span class="string">"XDomainRequestAllowed"</span>,<span class="string">"1"</span>);</div><div class="line">        chain.doFilter(req,resp);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="3-2-配置-web-xml-文件"><a href="#3-2-配置-web-xml-文件" class="headerlink" title="3.2 配置 web.xml 文件"></a>3.2 配置 web.xml 文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>cors<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.light.system.web.filter.SimpleCORSFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>cors<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h2><ul><li><a href="http://lleohao.com/2017/08/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/" target="_blank" rel="external">http://lleohao.com/2017/08/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;在公司空暇时间，笔者使用 AngularJS + SSM 方案编写一套权限控制系统。由于采用的是前后端分离的思想，前端页面服务启动的端口和后端服务启动端口不一致导致请求跨域问题的出现。在此，写下解决问题的流程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;建议读者先浏览文章末尾提供的参考资料初步了解跨域基本知识，再结合本文案例思考和理解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;二、前端&quot;&gt;&lt;a href=&quot;#二、前端&quot; class=&quot;headerlink&quot; title=&quot;二、前端&quot;&gt;&lt;/a&gt;二、前端&lt;/h2&gt;&lt;h3 id=&quot;2-1-设置请求参数&quot;&gt;&lt;a href=&quot;#2-1-设置请求参数&quot; class=&quot;headerlink&quot; title=&quot;2.1 设置请求参数&quot;&gt;&lt;/a&gt;2.1 设置请求参数&lt;/h3&gt;&lt;p&gt;在 ajax 请求参数中添加 2 个参数设置：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;xhrFields: &amp;#123; &lt;span class=&quot;attr&quot;&gt;withCredentials&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;crossDomain: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="后端" scheme="http://www.extlight.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="跨域" scheme="http://www.extlight.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 性能优化技巧</title>
    <link href="http://www.extlight.com/2017/09/23/jQuery-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.extlight.com/2017/09/23/jQuery-性能优化技巧/</id>
    <published>2017-09-23T00:31:21.000Z</published>
    <updated>2017-09-28T01:50:55.313Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ow97db1io.bkt.clouddn.com/jQuery.jpg" alt=""></p><h2 id="一、使用最新版本-jQuery-类库"><a href="#一、使用最新版本-jQuery-类库" class="headerlink" title="一、使用最新版本 jQuery 类库"></a>一、使用最新版本 jQuery 类库</h2><h2 id="二、合理使用选择器"><a href="#二、合理使用选择器" class="headerlink" title="二、合理使用选择器"></a>二、合理使用选择器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># 推荐使用</div><div class="line">$(<span class="string">"#id"</span>) </div><div class="line"></div><div class="line"># 可以使用</div><div class="line">$(<span class="string">"p"</span>),$(<span class="string">"span"</span>) </div><div class="line"></div><div class="line"># 可以使用</div><div class="line">$(<span class="string">".class"</span>) </div><div class="line"></div><div class="line"># 尽量避免</div><div class="line">$(<span class="string">"[attribute=value]"</span>)  </div><div class="line"></div><div class="line"># 尽量避免</div><div class="line">$(<span class="string">":hidden"</span>)</div></pre></td></tr></table></figure><a id="more"></a><h2 id="三、使用缓存对象"><a href="#三、使用缓存对象" class="headerlink" title="三、使用缓存对象"></a>三、使用缓存对象</h2><p>场景：修改某个按钮的文本和颜色</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 不好的写法</div><div class="line"></div><div class="line">$(<span class="string">"#btn"</span>).text(<span class="string">"重置"</span>);</div><div class="line"></div><div class="line">$(<span class="string">"#btn"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>);</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 优化的写法</div><div class="line"></div><div class="line"><span class="keyword">var</span> $btn = $(<span class="string">"#btn"</span>);</div><div class="line"></div><div class="line">$btn.text(<span class="string">"重置"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>);</div></pre></td></tr></table></figure><h2 id="四、循环时减少对DOM的操作"><a href="#四、循环时减少对DOM的操作" class="headerlink" title="四、循环时减少对DOM的操作"></a>四、循环时减少对DOM的操作</h2><p>场景：往 &lt;ul&gt; 中添加 &lt;li&gt; 菜单项</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># 不好的写法</div><div class="line"></div><div class="line"><span class="keyword">var</span> $ul = $(<span class="string">"#menu"</span>);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) &#123;</div><div class="line">    $ul.append(<span class="string">"&lt;li&gt;菜单"</span>+i+<span class="string">"&lt;/li&gt;"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 优化的写法</div><div class="line"></div><div class="line"><span class="keyword">var</span> $ul = $(<span class="string">"#menu"</span>);</div><div class="line"><span class="keyword">var</span> html = <span class="string">""</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) &#123;</div><div class="line">    html += <span class="string">"&lt;li&gt;菜单"</span>+i+<span class="string">"&lt;/li&gt;"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ul.append(html);</div></pre></td></tr></table></figure><h2 id="五、使用事件代理"><a href="#五、使用事件代理" class="headerlink" title="五、使用事件代理"></a>五、使用事件代理</h2><p>场景：给 &lt;ul&gt; 里的所有 &lt;li&gt; 绑定点击变色事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 不好的写法</div><div class="line"></div><div class="line">$(<span class="string">"ul li"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">   $(<span class="keyword">this</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>); </div><div class="line">&#125;);</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 优化的写法</div><div class="line"></div><div class="line">$(<span class="string">"ul li"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> $obj = $(e.target);</div><div class="line">   $obj.css(<span class="string">"color"</span>,<span class="string">"red"</span>); </div><div class="line">&#125;);</div></pre></td></tr></table></figure><h2 id="六、将代码转成-jQuery-插件"><a href="#六、将代码转成-jQuery-插件" class="headerlink" title="六、将代码转成 jQuery 插件"></a>六、将代码转成 jQuery 插件</h2><h2 id="七、使用-join-拼接字符串"><a href="#七、使用-join-拼接字符串" class="headerlink" title="七、使用 join() 拼接字符串"></a>七、使用 join() 拼接字符串</h2><p>第四点的案例中，代码还可以进行优化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $ul = $(<span class="string">"#menu"</span>);</div><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) &#123;</div><div class="line">   arr.push(<span class="string">"&lt;li&gt;菜单"</span>+i+<span class="string">"&lt;/li&gt;"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$ul.append(arr.join(<span class="string">""</span>);</div></pre></td></tr></table></figure><h2 id="八、合理利用-HTML5-的-data-属性"><a href="#八、合理利用-HTML5-的-data-属性" class="headerlink" title="八、合理利用 HTML5 的 data 属性"></a>八、合理利用 HTML5 的 data 属性</h2><p>使用 data-* 属性来嵌入自定义数据。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">data-age</span>=<span class="string">"26"</span> <span class="attr">data-gender</span>=<span class="string">"男"</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">var</span> user = $(<span class="string">"#user"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> age = user.data(<span class="string">"age"</span>);</div><div class="line"><span class="keyword">var</span> gender = $(<span class="string">"#user"</span>).data(<span class="string">"gender"</span>);</div></pre></td></tr></table></figure><h2 id="九、尽量使用原生的-JS-方法"><a href="#九、尽量使用原生的-JS-方法" class="headerlink" title="九、尽量使用原生的 JS 方法"></a>九、尽量使用原生的 JS 方法</h2><p>第五点的案例中，可以如下优化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"ul li"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">   <span class="keyword">var</span> $obj = $(e.target);</div><div class="line">   $obj.get(<span class="number">0</span>).style.color = <span class="string">"red"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h2 id="十、压缩-JS-代码"><a href="#十、压缩-JS-代码" class="headerlink" title="十、压缩 JS 代码"></a>十、压缩 JS 代码</h2><p><strong><em>如有更多优化技巧，后续补充……</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ow97db1io.bkt.clouddn.com/jQuery.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、使用最新版本-jQuery-类库&quot;&gt;&lt;a href=&quot;#一、使用最新版本-jQuery-类库&quot; class=&quot;headerlink&quot; title=&quot;一、使用最新版本 jQuery 类库&quot;&gt;&lt;/a&gt;一、使用最新版本 jQuery 类库&lt;/h2&gt;&lt;h2 id=&quot;二、合理使用选择器&quot;&gt;&lt;a href=&quot;#二、合理使用选择器&quot; class=&quot;headerlink&quot; title=&quot;二、合理使用选择器&quot;&gt;&lt;/a&gt;二、合理使用选择器&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# 推荐使用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#id&quot;&lt;/span&gt;) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 可以使用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;),$(&lt;span class=&quot;string&quot;&gt;&quot;span&quot;&lt;/span&gt;) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 可以使用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.class&quot;&lt;/span&gt;) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 尽量避免&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute=value]&quot;&lt;/span&gt;)  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# 尽量避免&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.extlight.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="http://www.extlight.com/tags/Javascript/"/>
    
      <category term="jQuery" scheme="http://www.extlight.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>UML 类图介绍</title>
    <link href="http://www.extlight.com/2017/09/20/UML-%E7%B1%BB%E5%9B%BE%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.extlight.com/2017/09/20/UML-类图介绍/</id>
    <published>2017-09-20T07:05:07.000Z</published>
    <updated>2017-09-28T01:52:06.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><p>类图是描述类、接口以及类之间关系的图。</p><h3 id="1-1-作用"><a href="#1-1-作用" class="headerlink" title="1.1 作用"></a>1.1 作用</h3><p>类图常用来描述业务或软件系统的组成、结构和关系</p><h3 id="1-2-类描述"><a href="#1-2-类描述" class="headerlink" title="1.2 类描述"></a>1.2 类描述</h3><p>类在 UML 中通常以实线矩形框表示。<br>矩形框中有若干分隔框，分别包含类名、属性、行为等元素。如下图：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-1.jpg" alt=""></p><p><strong>类名：图中蓝色背景的字，如果字体为斜体，表名该类为抽象类</strong><br><strong>属性：类名下边的区域</strong><br><strong>行为：属性下边的区域</strong><br><strong>可见性：属性和行为前边的 “+”、”-“ 和 “#”（图中未标注） 分别表示 public、private 和 protected</strong></p><a id="more"></a><h3 id="1-3-接口描述"><a href="#1-3-接口描述" class="headerlink" title="1.3 接口描述"></a>1.3 接口描述</h3><p>接口的类图表述与类大致相同，不同的是接口名要添加 Interface 标识，且行为的可见性必须用 “+” 表示。如下图：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-2.jpg" alt=""></p><h2 id="二、类图中的六种关系"><a href="#二、类图中的六种关系" class="headerlink" title="二、类图中的六种关系"></a>二、类图中的六种关系</h2><ul><li>继承</li><li>实现</li><li>关联</li><li>依赖</li><li>组合</li><li>聚合</li></ul><h3 id="2-1-继承（Inherit）"><a href="#2-1-继承（Inherit）" class="headerlink" title="2.1 继承（Inherit）"></a>2.1 继承（Inherit）</h3><p>继承是面向对象语言的三个特性之一。子类继承父类，子类可以使用父类所有非私有的属性和方法，其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-03.jpg" alt=""></p><p>UML 类图中继承关系使用<strong>空心三角形+实线</strong>表示。</p><h3 id="2-2-实现（Realization）"><a href="#2-2-实现（Realization）" class="headerlink" title="2.2 实现（Realization）"></a>2.2 实现（Realization）</h3><p>实现与继承类似，实现类继承接口中的方法，但是方法必须由实现类自己实现，其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-4.jpg" alt=""></p><p>UML 类图中实现关系使用<strong>空心三角形+虚线</strong>表示。</p><h3 id="2-3-关联（Association）"><a href="#2-3-关联（Association）" class="headerlink" title="2.3 关联（Association）"></a>2.3 关联（Association）</h3><p>指类与类之间的关系，它使得一个类知道另一个类的属性和方法。关联可以是双向的，也可以是单向的。</p><p>用 Java 代码表示企鹅只存在在南极，与气候有关系：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Penguin</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Climate climate;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-5.jpg" alt=""></p><p>UML 类图中关联关系使用<strong>实线箭头</strong>表示。</p><h3 id="2-4-依赖（Dependency）"><a href="#2-4-依赖（Dependency）" class="headerlink" title="2.4 依赖（Dependency）"></a>2.4 依赖（Dependency）</h3><p>指类与类之间的联接，依赖关系表示一个类依赖于另一个类的定义。一般而言，依赖关系在Java语言中体现为局域变量、方法的形参，或者对静态方法的调用。</p><p>用 Java 代码表示程序员工作需要用到电脑：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Programmer</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">(Computer computer)</span> </span>&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-6.jpg" alt=""></p><p>UML 类图中依赖关系使用<strong>虚线箭头</strong>表示。</p><h3 id="2-5-组合（Composition）"><a href="#2-5-组合（Composition）" class="headerlink" title="2.5 组合（Composition）"></a>2.5 组合（Composition）</h3><p>关联关系的一种，表示一种强的“拥有”关系，体现了严格的部分和整体的关系，部分和整体的生命周期一样。</p><p>用 Java 表示每只鸟都有翅膀：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Wing wing;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Bird</span><span class="params">()</span> </span>&#123;</div><div class="line">        wing = <span class="keyword">new</span> Wing();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-7.jpg" alt=""></p><p>UML 类图中组合关系使用<strong>实心菱形实线</strong>表示。</p><h3 id="2-6-聚合（Aggressgation）"><a href="#2-6-聚合（Aggressgation）" class="headerlink" title="2.6 聚合（Aggressgation）"></a>2.6 聚合（Aggressgation）</h3><p>关联关系的一种，表示一种弱的“拥有”关系，体现的是A对象可以包含B对象，但是B对象不是A对象的一部分。</p><p>用 Java 代码表示大雁是群居动物，每只大雁都属于一个雁群，一个雁群可以有多只大雁：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WildGooseAggregate</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;WildGoose&gt; wideGooses;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其UML类图表示如下：<br><img src="http://ow97db1io.bkt.clouddn.com/uml-8.jpg" alt=""></p><p>UML 类图中聚合关系使用<strong>空心菱形实线</strong>表示。</p><h2 id="三、参考资料"><a href="#三、参考资料" class="headerlink" title="三、参考资料"></a>三、参考资料</h2><ul><li><a href="http://www.cnblogs.com/javawebsoa/archive/2013/08/01/3230737.html" target="_blank" rel="external">http://www.cnblogs.com/javawebsoa/archive/2013/08/01/3230737.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、基本概念&quot;&gt;&lt;a href=&quot;#一、基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、基本概念&quot;&gt;&lt;/a&gt;一、基本概念&lt;/h2&gt;&lt;p&gt;类图是描述类、接口以及类之间关系的图。&lt;/p&gt;
&lt;h3 id=&quot;1-1-作用&quot;&gt;&lt;a href=&quot;#1-1-作用&quot; class=&quot;headerlink&quot; title=&quot;1.1 作用&quot;&gt;&lt;/a&gt;1.1 作用&lt;/h3&gt;&lt;p&gt;类图常用来描述业务或软件系统的组成、结构和关系&lt;/p&gt;
&lt;h3 id=&quot;1-2-类描述&quot;&gt;&lt;a href=&quot;#1-2-类描述&quot; class=&quot;headerlink&quot; title=&quot;1.2 类描述&quot;&gt;&lt;/a&gt;1.2 类描述&lt;/h3&gt;&lt;p&gt;类在 UML 中通常以实线矩形框表示。&lt;br&gt;矩形框中有若干分隔框，分别包含类名、属性、行为等元素。如下图：&lt;br&gt;&lt;img src=&quot;http://ow97db1io.bkt.clouddn.com/uml-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;类名：图中蓝色背景的字，如果字体为斜体，表名该类为抽象类&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;属性：类名下边的区域&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;行为：属性下边的区域&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;可见性：属性和行为前边的 “+”、”-“ 和 “#”（图中未标注） 分别表示 public、private 和 protected&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.extlight.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="UML" scheme="http://www.extlight.com/tags/UML/"/>
    
  </entry>
  
  <entry>
    <title>原生 Javascript 编写贪吃蛇</title>
    <link href="http://www.extlight.com/2017/09/18/%E5%8E%9F%E7%94%9F-Javascript-%E7%BC%96%E5%86%99%E8%B4%AA%E5%90%83%E8%9B%87/"/>
    <id>http://www.extlight.com/2017/09/18/原生-Javascript-编写贪吃蛇/</id>
    <published>2017-09-18T06:45:23.000Z</published>
    <updated>2017-09-28T01:57:16.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简单介绍"><a href="#一、简单介绍" class="headerlink" title="一、简单介绍"></a>一、简单介绍</h2><h3 id="1-1-效果展示"><a href="#1-1-效果展示" class="headerlink" title="1.1 效果展示"></a>1.1 效果展示</h3><p><img src="http://ow97db1io.bkt.clouddn.com/snake-1.gif" alt=""> </p><h3 id="1-2-实现思路"><a href="#1-2-实现思路" class="headerlink" title="1.2 实现思路"></a>1.2 实现思路</h3><ul><li>地图：创建一个 800px * 400px 的 div 元素来充当地图；地图可以看作由 40 x 20 个小 div（宽高都为20px） 元素组成。</li><li>食物：创建一个 宽高都为 20px 的 div 充当食物；食物通过 Math.random 分配随机位置。</li><li>蛇：创建一个二维数组充当蛇；二维数组存放蛇节（3个蛇身和1个蛇头），一维数组存放蛇节的位置、颜色和下一个蛇节对象。</li><li>蛇移动：先移动蛇尾，再移动蛇头。当前移动的蛇节位置为下一个蛇节未移动时的位置。</li></ul><h3 id="1-3-设计技术点"><a href="#1-3-设计技术点" class="headerlink" title="1.3 设计技术点"></a>1.3 设计技术点</h3><p>DOM操作、面向对象、事件操作和间隔函数setInterval</p><a id="more"></a><h3 id="1-4-项目结构"><a href="#1-4-项目结构" class="headerlink" title="1.4 项目结构"></a>1.4 项目结构</h3><p><img src="http://ow97db1io.bkt.clouddn.com/snake-2.jpg" alt=""></p><h2 id="二、实现步骤"><a href="#二、实现步骤" class="headerlink" title="二、实现步骤"></a>二、实现步骤</h2><h3 id="2-1-绘制地图"><a href="#2-1-绘制地图" class="headerlink" title="2.1 绘制地图"></a>2.1 绘制地图</h3><h4 id="2-1-1-style-css-文件"><a href="#2-1-1-style-css-文件" class="headerlink" title="2.1.1 style.css 文件"></a>2.1.1 style.css 文件</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.map</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">background-color</span>: pink;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-1-2-map-js-文件"><a href="#2-1-2-map-js-文件" class="headerlink" title="2.1.2 map.js 文件"></a>2.1.2 map.js 文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="built_in">Map</span> = <span class="function"><span class="keyword">function</span>(<span class="params">width,height</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.width = width;</div><div class="line">    <span class="keyword">this</span>.height = height;</div><div class="line">    <span class="keyword">this</span>.id = <span class="string">"map"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">Map</span>.prototype.showMap = <span class="function"><span class="keyword">function</span>(<span class="params">containerId</span>) </span>&#123;</div><div class="line">    <span class="comment">// 创建地图并设置样式</span></div><div class="line">    <span class="keyword">var</span> mapDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">    mapDiv.style.width = <span class="keyword">this</span>.width +<span class="string">"px"</span>;</div><div class="line">    mapDiv.style.height = <span class="keyword">this</span>.height + <span class="string">"px"</span>;</div><div class="line">    mapDiv.className = <span class="keyword">this</span>.id;</div><div class="line">    mapDiv.id = <span class="keyword">this</span>.id;</div><div class="line">    <span class="comment">// 将创建的地图添加到页面中</span></div><div class="line">    <span class="built_in">document</span>.getElementById(containerId).appendChild(mapDiv);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-1-3-game-js-文件创建地图"><a href="#2-1-3-game-js-文件创建地图" class="headerlink" title="2.1.3 game.js 文件创建地图"></a>2.1.3 game.js 文件创建地图</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Game.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="number">800</span>, <span class="number">400</span>); <span class="comment">// 长宽数值必须是2的整数倍</span></div><div class="line">    map.showMap(<span class="string">"container"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-1-4-index-html-文件开始游戏"><a href="#2-1-4-index-html-文件开始游戏" class="headerlink" title="2.1.4 index.html 文件开始游戏"></a>2.1.4 index.html 文件开始游戏</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>贪吃蛇<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/map.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/food.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/snake.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/game.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">var</span> game = <span class="keyword">new</span> Game();</span></div><div class="line"><span class="undefined">        game.start();</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="2-1-5-效果"><a href="#2-1-5-效果" class="headerlink" title="2.1.5 效果"></a>2.1.5 效果</h4><p><img src="http://ow97db1io.bkt.clouddn.com/snake-3.jpg" alt="">   </p><h3 id="2-2-绘制食物"><a href="#2-2-绘制食物" class="headerlink" title="2.2 绘制食物"></a>2.2 绘制食物</h3><h4 id="2-2-1-food-js-文件"><a href="#2-2-1-food-js-文件" class="headerlink" title="2.2.1 food.js 文件"></a>2.2.1 food.js 文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Food = <span class="function"><span class="keyword">function</span>(<span class="params">map</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.size = <span class="number">20</span>; <span class="comment">// 食物大小</span></div><div class="line">    <span class="keyword">this</span>.xFood = <span class="number">0</span>; <span class="comment">// 食物x坐标</span></div><div class="line">    <span class="keyword">this</span>.yFood = <span class="number">0</span>; <span class="comment">// 食物y坐标</span></div><div class="line">    <span class="keyword">this</span>.map = map; <span class="comment">// 坐在地图</span></div><div class="line">    <span class="keyword">this</span>.foodDiv = <span class="literal">null</span>; <span class="comment">// 地图中的食物</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">Food.prototype.showFood = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 此处判断确保地图中只有一个食物</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.foodDiv === <span class="literal">null</span>) &#123;</div><div class="line">        <span class="comment">// 创建食物并设置样式</span></div><div class="line">        <span class="keyword">this</span>.foodDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">        <span class="keyword">this</span>.foodDiv.style.width = <span class="keyword">this</span>.foodDiv.style.height = <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line">        <span class="keyword">this</span>.foodDiv.style.backgroundColor = <span class="string">"red"</span>;</div><div class="line">        <span class="keyword">this</span>.foodDiv.style.position = <span class="string">"absolute"</span>;</div><div class="line">        <span class="comment">// 将食物添加到地图上</span></div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="keyword">this</span>.map.id).appendChild(<span class="keyword">this</span>.foodDiv);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 食物步进值：20px</span></div><div class="line">    <span class="comment">// 食物权值坐标：X轴（0 - map.width/this.size）Y轴（0 - map.height/this.size）</span></div><div class="line">    <span class="keyword">this</span>.xFood = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (<span class="keyword">this</span>.map.width / <span class="keyword">this</span>.size));</div><div class="line">    <span class="keyword">this</span>.yFood = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (<span class="keyword">this</span>.map.height / <span class="keyword">this</span>.size));</div><div class="line">    <span class="comment">// 设置食物在地图的位置</span></div><div class="line">    <span class="keyword">this</span>.foodDiv.style.left = <span class="keyword">this</span>.xFood * <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line">    <span class="keyword">this</span>.foodDiv.style.top = <span class="keyword">this</span>.yFood * <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-2-2-game-js-文件创建地图和食物对象"><a href="#2-2-2-game-js-文件创建地图和食物对象" class="headerlink" title="2.2.2 game.js 文件创建地图和食物对象"></a>2.2.2 game.js 文件创建地图和食物对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Game.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="number">800</span>, <span class="number">400</span>); <span class="comment">// 长宽数值必须是2的整数倍</span></div><div class="line">    map.showMap(<span class="string">"container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> food = <span class="keyword">new</span> Food(map);</div><div class="line">    food.showFood();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-2-3-效果"><a href="#2-2-3-效果" class="headerlink" title="2.2.3 效果"></a>2.2.3 效果</h4><p><img src="http://ow97db1io.bkt.clouddn.com/snake-4.jpg" alt=""></p><h3 id="2-3-绘制小蛇"><a href="#2-3-绘制小蛇" class="headerlink" title="2.3 绘制小蛇"></a>2.3 绘制小蛇</h3><h4 id="2-3-1-snake-js-文件"><a href="#2-3-1-snake-js-文件" class="headerlink" title="2.3.1 snake.js 文件"></a>2.3.1 snake.js 文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Snake = <span class="function"><span class="keyword">function</span>(<span class="params">food</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.size = <span class="number">20</span>;</div><div class="line">    <span class="comment">// 初始化蛇&#123;x坐标，y坐标，颜色，蛇节对象&#125;</span></div><div class="line">    <span class="keyword">this</span>.snakeBody = [</div><div class="line">        &#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="string">"black"</span>,<span class="attr">obj</span>:<span class="literal">null</span>&#125;,<span class="comment">// 蛇身</span></div><div class="line">        &#123;<span class="attr">x</span>:<span class="number">1</span>,<span class="attr">y</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="string">"black"</span>,<span class="attr">obj</span>:<span class="literal">null</span>&#125;,<span class="comment">// 蛇身</span></div><div class="line">        &#123;<span class="attr">x</span>:<span class="number">2</span>,<span class="attr">y</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="string">"black"</span>,<span class="attr">obj</span>:<span class="literal">null</span>&#125;,<span class="comment">// 蛇身</span></div><div class="line">        &#123;<span class="attr">x</span>:<span class="number">3</span>,<span class="attr">y</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="string">"white"</span>,<span class="attr">obj</span>:<span class="literal">null</span>&#125;<span class="comment">// 蛇头</span></div><div class="line">    ];</div><div class="line">    <span class="keyword">this</span>.direction = <span class="string">"right"</span>; <span class="comment">// 蛇移动方向</span></div><div class="line">    <span class="keyword">this</span>.food = food; <span class="comment">//食物</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 显示蛇</span></div><div class="line">Snake.prototype.showSnake = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//遍历蛇节，依次创建</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.snakeBody.length; i++)&#123;</div><div class="line">        <span class="comment">//此处判断为了避免重复创建蛇节</span></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.snakeBody[i].obj == <span class="literal">null</span>) &#123;</div><div class="line">            <span class="comment">// 创建蛇节div，设置样式</span></div><div class="line">            <span class="keyword">this</span>.snakeBody[i].obj = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">            <span class="keyword">this</span>.snakeBody[i].obj.style.width = <span class="keyword">this</span>.snakeBody[i].obj.style.height = <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line">            <span class="keyword">this</span>.snakeBody[i].obj.style.backgroundColor = <span class="keyword">this</span>.snakeBody[i].color;</div><div class="line">            <span class="keyword">this</span>.snakeBody[i].obj.style.position = <span class="string">"absolute"</span>;</div><div class="line">            <span class="comment">// 追加蛇节</span></div><div class="line">            <span class="built_in">document</span>.getElementById(<span class="keyword">this</span>.food.map.id).appendChild(<span class="keyword">this</span>.snakeBody[i].obj);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 设置蛇在地图中的位置</span></div><div class="line">        <span class="keyword">this</span>.snakeBody[i].obj.style.left = <span class="keyword">this</span>.snakeBody[i].x * <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line">        <span class="keyword">this</span>.snakeBody[i].obj.style.top = <span class="keyword">this</span>.snakeBody[i].y * <span class="keyword">this</span>.size + <span class="string">"px"</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-3-2-game-js-文件创建地图、食物和蛇对象"><a href="#2-3-2-game-js-文件创建地图、食物和蛇对象" class="headerlink" title="2.3.2 game.js 文件创建地图、食物和蛇对象"></a>2.3.2 game.js 文件创建地图、食物和蛇对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Game.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="number">800</span>, <span class="number">400</span>); <span class="comment">// 长宽数值必须是2的整数倍</span></div><div class="line">    map.showMap(<span class="string">"container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> food = <span class="keyword">new</span> Food(map);</div><div class="line">    food.showFood();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> snake = <span class="keyword">new</span> Snake(food);</div><div class="line">    snake.showSnake();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-3-3-效果"><a href="#2-3-3-效果" class="headerlink" title="2.3.3 效果"></a>2.3.3 效果</h4><p><img src="http://ow97db1io.bkt.clouddn.com/snake-5.jpg" alt=""></p><h3 id="2-4-小蛇移动"><a href="#2-4-小蛇移动" class="headerlink" title="2.4 小蛇移动"></a>2.4 小蛇移动</h3><h4 id="2-4-1-snake-js-文件，添加move方法"><a href="#2-4-1-snake-js-文件，添加move方法" class="headerlink" title="2.4.1 snake.js 文件，添加move方法"></a>2.4.1 snake.js 文件，添加move方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 移动蛇</span></div><div class="line">Snake.prototype.move = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 非蛇头蛇节（当前蛇节的新坐标 为 下个蛇节的旧坐标）</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="keyword">this</span>.snakeBody.length <span class="number">-1</span>; i++) &#123;</div><div class="line">        <span class="keyword">this</span>.snakeBody[i].x = <span class="keyword">this</span>.snakeBody[i+<span class="number">1</span>].x;</div><div class="line">        <span class="keyword">this</span>.snakeBody[i].y = <span class="keyword">this</span>.snakeBody[i+<span class="number">1</span>].y;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 设置蛇头位置</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.direction == <span class="string">"right"</span>) &#123;</div><div class="line">        <span class="comment">// 蛇头x坐标累加</span></div><div class="line">        <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length - <span class="number">1</span>].x += <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.direction == <span class="string">"left"</span>) &#123;</div><div class="line">        <span class="comment">// 蛇头x坐标累加</span></div><div class="line">        <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length - <span class="number">1</span>].x -= <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.direction == <span class="string">"up"</span>) &#123;</div><div class="line">        <span class="comment">// 蛇头x坐标累加</span></div><div class="line">        <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length - <span class="number">1</span>].y -= <span class="number">1</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.direction == <span class="string">"down"</span>) &#123;</div><div class="line">        <span class="comment">// 蛇头x坐标累加</span></div><div class="line">        <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length - <span class="number">1</span>].y += <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.showSnake();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="2-4-2-game-js-文件使用-interval-函数调用蛇对象的move方法"><a href="#2-4-2-game-js-文件使用-interval-函数调用蛇对象的move方法" class="headerlink" title="2.4.2 game.js 文件使用 interval 函数调用蛇对象的move方法"></a>2.4.2 game.js 文件使用 interval 函数调用蛇对象的move方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Game.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="number">800</span>, <span class="number">400</span>); <span class="comment">// 长宽数值必须是2的整数倍</span></div><div class="line">    map.showMap(<span class="string">"container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> food = <span class="keyword">new</span> Food(map);</div><div class="line">    food.showFood();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> snake = <span class="keyword">new</span> Snake(food);</div><div class="line">    snake.showSnake();</div><div class="line"></div><div class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        snake.move();</div><div class="line">    &#125;, <span class="number">100</span>);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-5-控制小蛇移动方向"><a href="#2-5-控制小蛇移动方向" class="headerlink" title="2.5 控制小蛇移动方向"></a>2.5 控制小蛇移动方向</h3><p>game.js 添加键盘按下事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> Game = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Game.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(<span class="number">800</span>, <span class="number">400</span>); <span class="comment">// 长宽数值必须是2的整数倍</span></div><div class="line">    map.showMap(<span class="string">"container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> food = <span class="keyword">new</span> Food(map);</div><div class="line">    food.showFood();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> snake = <span class="keyword">new</span> Snake(food);</div><div class="line">    snake.showSnake();</div><div class="line"></div><div class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        snake.move();</div><div class="line">    &#125;, <span class="number">100</span>);</div><div class="line"></div><div class="line">    <span class="comment">// 键盘控制</span></div><div class="line">    <span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (e.keyCode) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">37</span>:</div><div class="line">                snake.direction = <span class="string">"left"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">38</span>:</div><div class="line">                snake.direction = <span class="string">"up"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">39</span>:</div><div class="line">                snake.direction = <span class="string">"right"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">40</span>:</div><div class="line">                snake.direction = <span class="string">"down"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        snake.showSnake();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-6-小蛇吃食物"><a href="#2-6-小蛇吃食物" class="headerlink" title="2.6 小蛇吃食物"></a>2.6 小蛇吃食物</h3><p>snake.js 文件在 move 方法   this.showSnake() 之前添加逻辑判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 蛇头坐标</span></div><div class="line"><span class="keyword">var</span> xSnakeHead = <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length <span class="number">-1</span>].x;</div><div class="line"><span class="keyword">var</span> ySnakeHead = <span class="keyword">this</span>.snakeBody[<span class="keyword">this</span>.snakeBody.length <span class="number">-1</span>].y;</div><div class="line"></div><div class="line"><span class="comment">//判断蛇吃否吃到食物</span></div><div class="line"><span class="keyword">if</span> (xSnakeHead == <span class="keyword">this</span>.food.xFood &amp;&amp; ySnakeHead == <span class="keyword">this</span>.food.yFood) &#123;</div><div class="line">    <span class="comment">// 增加蛇长</span></div><div class="line">    <span class="keyword">var</span> newBody = &#123;<span class="attr">x</span>:<span class="keyword">this</span>.snakeBody[<span class="number">0</span>].x,<span class="attr">y</span>:<span class="keyword">this</span>.snakeBody[<span class="number">0</span>].y,<span class="attr">color</span>:<span class="string">"black"</span>,<span class="attr">obj</span>:<span class="literal">null</span>&#125;;</div><div class="line">    <span class="keyword">this</span>.snakeBody.unshift(newBody);</div><div class="line">    <span class="comment">// 食物消失，再随机生成</span></div><div class="line">    <span class="keyword">this</span>.food.showFood();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-7-小蛇移动范围"><a href="#2-7-小蛇移动范围" class="headerlink" title="2.7 小蛇移动范围"></a>2.7 小蛇移动范围</h3><p>snake.js 文件在 move 方法   this.showSnake() 之前添加逻辑判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 控制小蛇移动范围</span></div><div class="line"><span class="keyword">if</span> (xSnakeHead &lt; <span class="number">0</span> || xSnakeHead &gt;= <span class="keyword">this</span>.food.map.width/<span class="keyword">this</span>.size</div><div class="line">    || ySnakeHead &lt;<span class="number">0</span> || ySnakeHead &gt;= <span class="keyword">this</span>.food.map.height/<span class="keyword">this</span>.size) &#123;</div><div class="line">    alert(<span class="string">"游戏结束!"</span>);</div><div class="line">    <span class="built_in">window</span>.location.reload();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 不能吃自己</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="keyword">this</span>.snakeBody.length <span class="number">-1</span>; j++) &#123;</div><div class="line">    <span class="comment">// 蛇头坐标 = 蛇身坐标，游戏结束</span></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.snakeBody[j].x == xSnakeHead &amp;&amp; <span class="keyword">this</span>.snakeBody[j].y == ySnakeHead) &#123;</div><div class="line">        alert(<span class="string">"游戏结束!"</span>);</div><div class="line">        <span class="built_in">window</span>.location.reload();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="三、源码下载"><a href="#三、源码下载" class="headerlink" title="三、源码下载"></a>三、源码下载</h2><p><a href="https://github.com/moonlightL/snake" target="_blank" rel="external">贪吃蛇</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、简单介绍&quot;&gt;&lt;a href=&quot;#一、简单介绍&quot; class=&quot;headerlink&quot; title=&quot;一、简单介绍&quot;&gt;&lt;/a&gt;一、简单介绍&lt;/h2&gt;&lt;h3 id=&quot;1-1-效果展示&quot;&gt;&lt;a href=&quot;#1-1-效果展示&quot; class=&quot;headerlink&quot; title=&quot;1.1 效果展示&quot;&gt;&lt;/a&gt;1.1 效果展示&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://ow97db1io.bkt.clouddn.com/snake-1.gif&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;h3 id=&quot;1-2-实现思路&quot;&gt;&lt;a href=&quot;#1-2-实现思路&quot; class=&quot;headerlink&quot; title=&quot;1.2 实现思路&quot;&gt;&lt;/a&gt;1.2 实现思路&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;地图：创建一个 800px * 400px 的 div 元素来充当地图；地图可以看作由 40 x 20 个小 div（宽高都为20px） 元素组成。&lt;/li&gt;
&lt;li&gt;食物：创建一个 宽高都为 20px 的 div 充当食物；食物通过 Math.random 分配随机位置。&lt;/li&gt;
&lt;li&gt;蛇：创建一个二维数组充当蛇；二维数组存放蛇节（3个蛇身和1个蛇头），一维数组存放蛇节的位置、颜色和下一个蛇节对象。&lt;/li&gt;
&lt;li&gt;蛇移动：先移动蛇尾，再移动蛇头。当前移动的蛇节位置为下一个蛇节未移动时的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-3-设计技术点&quot;&gt;&lt;a href=&quot;#1-3-设计技术点&quot; class=&quot;headerlink&quot; title=&quot;1.3 设计技术点&quot;&gt;&lt;/a&gt;1.3 设计技术点&lt;/h3&gt;&lt;p&gt;DOM操作、面向对象、事件操作和间隔函数setInterval&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://www.extlight.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="http://www.extlight.com/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>学习 Git 玩转 GitHub</title>
    <link href="http://www.extlight.com/2017/09/18/%E5%AD%A6%E4%B9%A0Git%E7%8E%A9%E8%BD%ACGitHub/"/>
    <id>http://www.extlight.com/2017/09/18/学习Git玩转GitHub/</id>
    <published>2017-09-18T03:26:50.000Z</published>
    <updated>2017-09-28T02:05:14.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、基本了解"><a href="#一、基本了解" class="headerlink" title="一、基本了解"></a>一、基本了解</h2><h3 id="1-1-什么是版本控制系统"><a href="#1-1-什么是版本控制系统" class="headerlink" title="1.1 什么是版本控制系统"></a>1.1 什么是版本控制系统</h3><p>版本控制系统是一种记录一个或若干个文件内容变化，以便将来查阅特定版本修订情况的系统。</p><h3 id="1-2-什么是-Git"><a href="#1-2-什么是-Git" class="headerlink" title="1.2 什么是 Git"></a>1.2 什么是 Git</h3><p>Git是一个免费、开源的版本控制软件</p><h3 id="1-3-什么是-Github"><a href="#1-3-什么是-Github" class="headerlink" title="1.3 什么是 Github"></a>1.3 什么是 Github</h3><p>Github是全球最大的社交编程及代码托管网站</p><h3 id="1-4-Git-和-GitHub-的关系"><a href="#1-4-Git-和-GitHub-的关系" class="headerlink" title="1.4 Git 和 GitHub 的关系"></a>1.4 Git 和 GitHub 的关系</h3><ul><li>Git是版本控制软件</li><li>Github是项目代码托管的平台，借助git来管理项目代码</li></ul><h3 id="1-5-什么要学习-GitHub"><a href="#1-5-什么要学习-GitHub" class="headerlink" title="1.5 什么要学习 GitHub"></a>1.5 什么要学习 GitHub</h3><ul><li>学习优秀的开源项目</li><li>关注行业前辈了解最新的行业动态</li></ul><a id="more"></a><h2 id="二、使用-GitHub"><a href="#二、使用-GitHub" class="headerlink" title="二、使用 GitHub"></a>二、使用 GitHub</h2><h3 id="2-1-目的"><a href="#2-1-目的" class="headerlink" title="2.1 目的"></a>2.1 目的</h3><p>借助 GitHub 托管项目代码</p><h3 id="2-2-GitHub-中的基本概念"><a href="#2-2-GitHub-中的基本概念" class="headerlink" title="2.2 GitHub 中的基本概念"></a>2.2 GitHub 中的基本概念</h3><h4 id="2-2-1-Repository（仓库）"><a href="#2-2-1-Repository（仓库）" class="headerlink" title="2.2.1 Repository（仓库）"></a>2.2.1 Repository（仓库）</h4><p>仓库用来存放项目代码，每个项目对应一个仓库，多个开源项目则有多个仓库</p><h4 id="2-2-2-Watch（关注）"><a href="#2-2-2-Watch（关注）" class="headerlink" title="2.2.2 Watch（关注）"></a>2.2.2 Watch（关注）</h4><p>关注项目，当项目更新可以接收到通知</p><h4 id="2-2-3-Star（收藏）"><a href="#2-2-3-Star（收藏）" class="headerlink" title="2.2.3 Star（收藏）"></a>2.2.3 Star（收藏）</h4><p>收藏项目，方便下次查看</p><h4 id="2-2-4-Fork（复制克隆项目）"><a href="#2-2-4-Fork（复制克隆项目）" class="headerlink" title="2.2.4 Fork（复制克隆项目）"></a>2.2.4 Fork（复制克隆项目）</h4><p>复制克隆别人的项目到自己的 Github 仓库中，独立存在，任何操作都不会对原先的仓库造成影响。</p><h4 id="2-2-5-Issue（问题讨论）"><a href="#2-2-5-Issue（问题讨论）" class="headerlink" title="2.2.5 Issue（问题讨论）"></a>2.2.5 Issue（问题讨论）</h4><p>发现代码 bug 时，发起消息与作者讨论</p><h4 id="2-2-6-Pull-Request（发起请求）"><a href="#2-2-6-Pull-Request（发起请求）" class="headerlink" title="2.2.6 Pull Request（发起请求）"></a>2.2.6 Pull Request（发起请求）</h4><p>当 fork 仓库，修改仓库的 bug 或 添加新功能后，想同步到原先的仓库时，发起请求给原仓库作者，让其对代码审核与合并。</p><h3 id="2-3-注册-GitHub-账号"><a href="#2-3-注册-GitHub-账号" class="headerlink" title="2.3 注册 GitHub 账号"></a>2.3 注册 GitHub 账号</h3><p>第一步：登陆官网 <a href="https://github.com" target="_blank" rel="external">GitHub官网</a>，如下图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-1.jpg" alt="image"></p><p>第二步：点击首页右上角的 “Sign up”，进入如下页面：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-2.jpg" alt="image"></p><p>填写好信息，点击 “Create an account”，来到如下页面：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-3.jpg" alt="image"></p><p>GitHub已经帮我们设置好默认选项，我们只管点击左下角绿色按钮即可。</p><p>当看到下边的界面时，我们就注册好账号了：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-4.jpg" alt="image"></p><h3 id="2-4-创建仓库-创建新项目"><a href="#2-4-创建仓库-创建新项目" class="headerlink" title="2.4 创建仓库/创建新项目"></a>2.4 创建仓库/创建新项目</h3><p>点击上图 “Start a project” 按钮创建项目（仓库）。但是，由于我们刚注册好账号，并没有对邮件地址进行合法校验。所以会出现如下界面：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-5.jpg" alt="image"></p><p>点击 红色框住的链接，GitHub 会跳转页面且重新发送一封邮件让我们进行对邮箱地址的校验。如图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-6.jpg" alt="image"></p><p>笔者使用的是 qq 邮箱，点击右下角提示进入到 qq 邮箱管理界面，如图：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-7.jpg" alt="image"></p><p>点击 “Verify email address” 连接进行校验，浏览器会打开新标签提示邮箱地址校验成功。</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-8.jpg" alt="image"></p><p>此时，我们点击 “Start a project” 就能真正创建项目了。此时，我们会来到如下界面：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-9.jpg" alt="image"></p><p>填写好基本信息，点击 “Create a repository”，来到仓库管理界面：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-10.jpg" alt="image"></p><p>根据图中的标注，我们可以根据自己的需求管理仓库。</p><h3 id="2-5-开源项目贡献流程"><a href="#2-5-开源项目贡献流程" class="headerlink" title="2.5 开源项目贡献流程"></a>2.5 开源项目贡献流程</h3><h4 id="2-5-1-新建Issue"><a href="#2-5-1-新建Issue" class="headerlink" title="2.5.1 新建Issue"></a>2.5.1 新建Issue</h4><p>提交使用问题、建议或者想法</p><h4 id="2-5-2-Pull-Request"><a href="#2-5-2-Pull-Request" class="headerlink" title="2.5.2 Pull Request"></a>2.5.2 Pull Request</h4><ol><li>fork 项目</li><li>修改自己仓库的项目代码</li><li>新建 pull request</li><li>等待作者操作审核</li></ol><h2 id="三、使用-Git"><a href="#三、使用-Git" class="headerlink" title="三、使用 Git"></a>三、使用 Git</h2><h3 id="3-1-目的"><a href="#3-1-目的" class="headerlink" title="3.1 目的"></a>3.1 目的</h3><p>通过 Git 管理 GitHub 托管项目代码</p><h3 id="3-2-下载安装"><a href="#3-2-下载安装" class="headerlink" title="3.2 下载安装"></a>3.2 下载安装</h3><p>登陆 <a href="https://www.git-scm.com/download/win" target="_blank" rel="external">https://www.git-scm.com/download/win</a> 下载</p><p>安装过程傻瓜化方式（在选择安装时，选择 Git Bash 和 Git GUI ，其余默认选项即可），步骤省略。</p><h3 id="3-3-Git-工作原理"><a href="#3-3-Git-工作原理" class="headerlink" title="3.3 Git 工作原理"></a>3.3 Git 工作原理</h3><p>对于任何一个文件，在 Git 内都只有三种状态：已提交（committed），已修改（modified）和已暂存（staged）。已提交表示该文件已经被安全地保存在本地数据库中了；已修改表示修改了某个文件，但还没有提交保存；已暂存表示把已修改的文件放在下次提交时要保存的清单中。</p><p>由此我们看到 Git 管理项目时，文件流转的三个工作区域：Git 的工作目录，暂存区域，以及本地仓库。</p><p> <img src="http://ow97db1io.bkt.clouddn.com/git-1.png" alt="image"></p><p> 每个项目都有一个 Git 目录（如果 git clone 出来的话，就是其中 .git 的目录）。它是 Git 用来保存元数据和对象数据库的地方。该目录非常重要，每次克隆镜像仓库的时候，实际拷贝的就是这个目录里面的数据。</p><p> 从项目中取出某个版本的所有文件和目录，用以开始后续工作的叫做工作目录。这些文件实际上都是从 Git 目录中的压缩对象数据库中提取出来的，接下来就可以在工作目录中对这些文件进行编辑。</p><p> 所谓的暂存区域只不过是个简单的文件，一般都放在 Git 目录中。有时候人们会把这个文件叫做索引文件，不过标准说法还是叫暂存区域。</p><p> 基本的 Git 工作流程如下：</p><ul><li>在工作目录中修改某些文件</li><li>对修改后的文件进行快照，然后保存到暂存区域</li><li>提交更新，将保存在暂存区域的文件快照永久转储到 Git 目录中。</li></ul><h3 id="3-4-Git-基本命令"><a href="#3-4-Git-基本命令" class="headerlink" title="3.4 Git 基本命令"></a>3.4 Git 基本命令</h3><h4 id="3-4-1-git-init"><a href="#3-4-1-git-init" class="headerlink" title="3.4.1 git init"></a>3.4.1 git init</h4><p>初始化工作目录，在当前目录下会创建一个名为 .git 的隐藏文件夹。</p><h4 id="3-4-2-git-add"><a href="#3-4-2-git-add" class="headerlink" title="3.4.2 git add"></a>3.4.2 git add</h4><p>创建或编辑文件后，执行该命令，将文件添加到暂存区</p><h4 id="3-4-3-git-commit"><a href="#3-4-3-git-commit" class="headerlink" title="3.4.3 git commit"></a>3.4.3 git commit</h4><p>将暂存区的文件推送到仓库中</p><h4 id="3-4-4-git-status"><a href="#3-4-4-git-status" class="headerlink" title="3.4.4 git status"></a>3.4.4 git status</h4><p>列出当前目录所有还没有被 Git 管理的文件和被 Git 管理且被修改但还未提交(git commit)的文件</p><h4 id="3-4-5-git-fetch"><a href="#3-4-5-git-fetch" class="headerlink" title="3.4.5 git fetch"></a>3.4.5 git fetch</h4><p>检测远程仓库所有分支</p><h4 id="3-4-6-git-checkout"><a href="#3-4-6-git-checkout" class="headerlink" title="3.4.6 git checkout"></a>3.4.6 git checkout</h4><p>切换分支</p><h4 id="3-4-7-git-branch"><a href="#3-4-7-git-branch" class="headerlink" title="3.4.7 git branch"></a>3.4.7 git branch</h4><p>查看当前所在分支</p><h4 id="3-4-8-git-rm"><a href="#3-4-8-git-rm" class="headerlink" title="3.4.8 git rm"></a>3.4.8 git rm</h4><p>删除仓库中的文件</p><h4 id="3-4-9-git-clone"><a href="#3-4-9-git-clone" class="headerlink" title="3.4.9 git clone"></a>3.4.9 git clone</h4><p>克隆远程仓库</p><h4 id="3-4-10-git-push"><a href="#3-4-10-git-push" class="headerlink" title="3.4.10 git push"></a>3.4.10 git push</h4><p>同步本地仓库到远程仓库</p><h3 id="3-5-Git-管理远程仓库"><a href="#3-5-Git-管理远程仓库" class="headerlink" title="3.5 Git 管理远程仓库"></a>3.5 Git 管理远程仓库</h3><p>Git 连接和管理 GitHub 上的文件，为了安全性，需要设置公钥。</p><p>之前的步骤我们安装了 Git，打开 Git 安装目录下的 Git Bash ，键入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;GitHub邮箱地址&quot;</div></pre></td></tr></table></figure><p>命令执行后会提示输入信息，我们不用填写，直接回车。最终会在系统 “C:/Users/用户名/.ssh/“ 目录中生成 rsa 和 rsa.pub 文件。</p><p>打开 rsa.pub 文件复制里边的所有内容。</p><p>回到 GitHub 中，按照如下图操作：</p><p><img src="http://ow97db1io.bkt.clouddn.com/github-11.jpg" alt="image"></p><p>最后我们进行测试，在 Git Bash 中键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure><p>如果出现 “Hi xxx! You’ve successfully authenticated” 字样，说明我们配置成功了。</p><p><img src="http://ow97db1io.bkt.clouddn.com/git-2.jpg" alt="image"></p><p>下边我们模拟场景运用 Git 命令将文件提交到 GitHub 的仓库中。</p><p><strong>场景一：非 clone 方式</strong><br>该场景下，我们没有对远程仓库进行关联，需要手动初始化 .git 文件夹</p><p>在 “E:\demo\git\test1”（自定义） 中，使用 Git Bash 或 CMD 键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line"></div><div class="line">echo &quot;hello world&quot; &gt; test.txt</div><div class="line"></div><div class="line">git add .</div><div class="line"></div><div class="line">git status</div><div class="line"></div><div class="line">git commit -m &quot;first commit&quot;</div><div class="line"></div><div class="line">#添加需要连接的远程仓库地址（关联远程仓库）</div><div class="line">git remote add origin git@github.com:bluesky960/test.git </div><div class="line"></div><div class="line">git fetch </div><div class="line"></div><div class="line"># 切换到 master 分支</div><div class="line">git checkout master </div><div class="line"></div><div class="line">git branch </div><div class="line"></div><div class="line">git push origin master</div></pre></td></tr></table></figure><p>此时，在 Github 的 test 仓库中会多出 test.txt 文件。</p><p><strong>场景二：clone 方式</strong></p><p>在 “E:\demo\git\test2”（自定义） 中，使用 Git Bash 或 CMD 键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># 执行 clone 操作会在当前目录中创建 .git 文件夹，关联远程仓库</div><div class="line">git clone git@github.com:bluesky960/test.git</div><div class="line"></div><div class="line">cd test</div><div class="line"></div><div class="line">echo &quot;clone hello world&quot; &gt; test2.txt</div><div class="line"></div><div class="line">git add .</div><div class="line"></div><div class="line">git commit -m &quot;add file&quot;</div><div class="line"></div><div class="line">git push</div></pre></td></tr></table></figure><p>此时，在 Github 的 test 仓库中会多出 test2.txt 文件。</p><p><strong>为了防止每次同步文件都需要输入账号和密码，我们需要进特殊配置</strong></p><p>打开 Git Bash 窗口，键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;GitHub用户名&quot;</div><div class="line">    </div><div class="line">git config --global user.email &quot;GitHub邮箱地址&quot;</div></pre></td></tr></table></figure><p><strong>踩坑提醒</strong></p><p>在执行 “git remote add origin” 命令时，后边跟着是 SSH 类型的仓库地址，否则，在每次 git push 时都要输入账号和密码！</p><h2 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h2><ul><li><a href="http://www.nowamagic.net/academy/detail/48160210" target="_blank" rel="external">http://www.nowamagic.net/academy/detail/48160210</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、基本了解&quot;&gt;&lt;a href=&quot;#一、基本了解&quot; class=&quot;headerlink&quot; title=&quot;一、基本了解&quot;&gt;&lt;/a&gt;一、基本了解&lt;/h2&gt;&lt;h3 id=&quot;1-1-什么是版本控制系统&quot;&gt;&lt;a href=&quot;#1-1-什么是版本控制系统&quot; class=&quot;headerlink&quot; title=&quot;1.1 什么是版本控制系统&quot;&gt;&lt;/a&gt;1.1 什么是版本控制系统&lt;/h3&gt;&lt;p&gt;版本控制系统是一种记录一个或若干个文件内容变化，以便将来查阅特定版本修订情况的系统。&lt;/p&gt;
&lt;h3 id=&quot;1-2-什么是-Git&quot;&gt;&lt;a href=&quot;#1-2-什么是-Git&quot; class=&quot;headerlink&quot; title=&quot;1.2 什么是 Git&quot;&gt;&lt;/a&gt;1.2 什么是 Git&lt;/h3&gt;&lt;p&gt;Git是一个免费、开源的版本控制软件&lt;/p&gt;
&lt;h3 id=&quot;1-3-什么是-Github&quot;&gt;&lt;a href=&quot;#1-3-什么是-Github&quot; class=&quot;headerlink&quot; title=&quot;1.3 什么是 Github&quot;&gt;&lt;/a&gt;1.3 什么是 Github&lt;/h3&gt;&lt;p&gt;Github是全球最大的社交编程及代码托管网站&lt;/p&gt;
&lt;h3 id=&quot;1-4-Git-和-GitHub-的关系&quot;&gt;&lt;a href=&quot;#1-4-Git-和-GitHub-的关系&quot; class=&quot;headerlink&quot; title=&quot;1.4 Git 和 GitHub 的关系&quot;&gt;&lt;/a&gt;1.4 Git 和 GitHub 的关系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Git是版本控制软件&lt;/li&gt;
&lt;li&gt;Github是项目代码托管的平台，借助git来管理项目代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-5-什么要学习-GitHub&quot;&gt;&lt;a href=&quot;#1-5-什么要学习-GitHub&quot; class=&quot;headerlink&quot; title=&quot;1.5 什么要学习 GitHub&quot;&gt;&lt;/a&gt;1.5 什么要学习 GitHub&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;学习优秀的开源项目&lt;/li&gt;
&lt;li&gt;关注行业前辈了解最新的行业动态&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.extlight.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="Git" scheme="http://www.extlight.com/tags/Git/"/>
    
      <category term="GitHub" scheme="http://www.extlight.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>简单介绍</title>
    <link href="http://www.extlight.com/2017/09/15/%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.extlight.com/2017/09/15/简单介绍/</id>
    <published>2017-09-15T08:21:17.000Z</published>
    <updated>2017-09-28T02:16:36.284Z</updated>
    
    <content type="html"><![CDATA[<p><strong>新博客上线</strong></p><p>之前在<a href="http://www.cnblogs.com/moonlightL/" target="_blank" rel="external">博客园</a>写博客，但是由于其排版和样式不够友好，因此笔者搭建新博客系统。以后就在这里博客。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;新博客上线&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之前在&lt;a href=&quot;http://www.cnblogs.com/moonlightL/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客园&lt;/a&gt;写博客，但是由于其排版和样式不够友好，因此
      
    
    </summary>
    
    
      <category term="其他" scheme="http://www.extlight.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
</feed>
